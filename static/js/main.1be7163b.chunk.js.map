{"version":3,"sources":["Hooks/useToggleState.js","Hooks/useInputState.js","Components/Todo.js","Components/TodoList.js","Components/TodoForm.js","Components/TodoApp.js","App.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","value","setValue","e","target","Todo","props","complete","useToggleState","isEditing","toggleIsEditing","useInputState","item","description","inputVal","handleInputChange","BlueCheckbox","withStyles","root","color","checked","Checkbox","completed","className","type","onChange","onClick","editItem","id","markItemComplete","deleteItem","TodoList","handleDelete","handleComplete","handleEdit","val","items","length","map","key","TodoForm","handleValChange","reset","closeModal","uuid","addItem","TodoApp","modalOpen","setModalOpen","setItems","updatedItems","filter","i","prevItems","App","ReactDOM","render","document","getElementById"],"mappings":"mdASeA,MAPf,WAAwC,IAArBC,EAAoB,0DACXC,mBAASD,GADE,mBAC9BE,EAD8B,KACvBC,EADuB,KAKrC,MAAO,CAACD,EAHO,WACbC,GAAUD,MCHC,WAAAF,GAAe,IAAD,EACDC,mBAASD,GADR,mBACpBI,EADoB,KACbC,EADa,KAQ3B,MAAO,CAACD,EANa,SAAAE,GACnBD,EAASC,EAAEC,OAAOH,QAEN,WACZC,EAAS,OCiEEG,EA9DF,SAAAC,GAAU,IAkBjBC,EAlBgB,EACiBC,IADjB,mBACbC,EADa,KACFC,EADE,OAEyBC,EAC3CL,EAAMM,KAAKC,aAHO,mBAEbC,EAFa,KAEHC,EAFG,KASdC,GATc,KASCC,YAAW,CAC9BC,KAAM,CACJC,MAAO,yBACP,YAAa,CACXA,MAAO,4BAGXC,QAAS,IAPUH,EAQlB,SAAAX,GAAK,OAAI,kBAACe,EAAA,EAAD,eAAUF,MAAM,WAAcb,QAG1C,OADwBC,EAAxBD,EAAMM,KAAKU,UAAwB,WAA0B,GAE3D,yBAAKC,UAAU,QACZd,EACC,yBAAKc,UAAU,kBACb,2BACEC,KAAK,OACLvB,MAAOa,EACPW,SAAUV,EACVQ,UAAU,yBAEZ,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAWA,UAAU,sBAAsBG,QA1BjC,WAClBpB,EAAMqB,SAASrB,EAAMM,KAAKgB,GAAId,GAC9BJ,OAyBQ,kBAAC,IAAD,CACEgB,QAAShB,EACTa,UAAU,0BAKhB,oCACE,yBAAKA,UAAU,cACb,kBAACP,EAAD,CACEI,QAASd,EAAMM,KAAKU,UACpBI,QAAS,kBAAMpB,EAAMuB,iBAAiBvB,EAAMM,KAAKgB,OAEnD,uBAAGL,UAAS,2BAAsBhB,IAC/BD,EAAMM,KAAKC,cAGhB,6BACE,kBAAC,IAAD,CAAUa,QAAShB,EAAiBa,UAAU,cAC9C,kBAAC,IAAD,CACEG,QAAS,kBAAMpB,EAAMwB,WAAWxB,EAAMM,KAAKgB,KAC3CL,UAAU,kBC/BTQ,G,MA7BE,SAAAzB,GACf,IAAM0B,EAAe,SAAAJ,GACnBtB,EAAMwB,WAAWF,IAEbK,EAAiB,SAAAL,GACrBtB,EAAMuB,iBAAiBD,IAGnBM,EAAa,SAACN,EAAIO,GACtB7B,EAAMqB,SAASC,EAAIO,IAErB,OACE,yBAAKZ,UAAU,YACZjB,EAAM8B,MAAMC,OAAS,GACpB/B,EAAM8B,MAAME,KAAI,SAAA1B,GACd,OACE,kBAAC,EAAD,CACEA,KAAMA,EACNiB,iBAAkBI,EAClBH,WAAYE,EACZL,SAAUO,EACVK,IAAK3B,EAAKgB,W,yBCOTY,EA3BE,SAAAlC,GAAU,IAAD,EACmBK,EAAc,IADjC,mBACjBG,EADiB,KACP2B,EADO,KACUC,EADV,KAOxB,OACE,yBAAKnB,UAAU,YACb,wBAAIA,UAAU,oBAAd,gBACA,8BACEA,UAAU,oBACVtB,MAAOa,EACPW,SAAUgB,IAEZ,yBAAKlB,UAAU,oBACb,4BAAQA,UAAU,2BAA2BG,QAASpB,EAAMqC,YAA5D,UAGA,4BAAQpB,UAAU,kBAAkBG,QAjBtB,WAClB,IAAId,EAAO,CAAEC,YAAaC,EAAUc,GAAIgB,MAAQtB,WAAW,GAC3DhB,EAAMuC,QAAQjC,GACd8B,MAcI,e,oOCnBR,IAkDeI,EAlDC,WAAO,IAAD,EACchD,oBAAS,GADvB,mBACbiD,EADa,KACFC,EADE,OAEMlD,mBAAS,IAFf,mBAEbsC,EAFa,KAENa,EAFM,KAiCpB,OACE,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,iBAAd,gBACA,uBAAGA,UAAU,2BAA2BG,QAlC1B,WAClBsB,GAAcD,OAmCZ,kBAAC,EAAD,CACEX,MAAOA,EACPP,iBAjBmB,SAAAD,GACvB,IAAIsB,EAAed,EAAME,KAAI,SAAA1B,GAI3B,OAHIA,EAAKgB,KAAOA,IACdhB,EAAKU,WAAaV,EAAKU,WAElBV,KAETqC,EAASC,IAWLpB,WA3Ba,SAAAF,GACjBqB,EAASb,EAAMe,QAAO,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,OA2BhCD,SAzBW,SAACC,EAAIO,GACpB,IAAIe,EAAed,EAAME,KAAI,SAAA1B,GAC3B,OAAOA,EAAKgB,KAAOA,E,yVAAZ,IAAsBhB,EAAtB,CAA4BC,YAAasB,IAAQvB,KAE1DqC,EAASC,MAuBNH,GAAa,kBAAC,EAAD,CAAUJ,WAvCT,WACjBK,GAAa,IAsCqCH,QApCpC,SAAAjC,GACdqC,GAAS,SAAAI,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBzC,OAExBoC,GAAa,QCNFM,MARf,WACE,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,QCFNgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1be7163b.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React from \"react\";\nimport \"../Styles/Todo.css\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport useToggleState from \"../Hooks/useToggleState\";\nimport useInputState from \"../Hooks/useInputState\";\n\nconst Todo = props => {\n  const [isEditing, toggleIsEditing] = useToggleState();\n  const [inputVal, handleInputChange, reset] = useInputState(\n    props.item.description\n  );\n  const handleClick = () => {\n    props.editItem(props.item.id, inputVal);\n    toggleIsEditing();\n  };\n  const BlueCheckbox = withStyles({\n    root: {\n      color: \"rgba(54, 92, 123, 0.8)\",\n      \"&$checked\": {\n        color: \"rgba(54, 92, 123, 0.95)\"\n      }\n    },\n    checked: {}\n  })(props => <Checkbox color=\"default\" {...props} />);\n  let complete;\n  props.item.completed ? (complete = \"complete\") : (complete = \"\");\n  return (\n    <div className=\"Todo\">\n      {isEditing ? (\n        <div className=\"Todo-edit-form\">\n          <input\n            type=\"text\"\n            value={inputVal}\n            onChange={handleInputChange}\n            className=\"Todo-edit-form-input\"\n          />\n          <div className=\"Todo-edit-form-icons\">\n            <CheckIcon className=\"Todo-edit-form-icon\" onClick={handleClick} />\n            <CancelIcon\n              onClick={toggleIsEditing}\n              className=\"Todo-edit-form-icon\"\n            />\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"Todo-check\">\n            <BlueCheckbox\n              checked={props.item.completed}\n              onClick={() => props.markItemComplete(props.item.id)}\n            />\n            <p className={`Todo-description ${complete}`}>\n              {props.item.description}\n            </p>\n          </div>\n          <div>\n            <EditIcon onClick={toggleIsEditing} className=\"Todo-icon\" />\n            <DeleteIcon\n              onClick={() => props.deleteItem(props.item.id)}\n              className=\"Todo-icon\"\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport \"../Styles/TodoList.css\";\n\nconst TodoList = props => {\n  const handleDelete = id => {\n    props.deleteItem(id);\n  };\n  const handleComplete = id => {\n    props.markItemComplete(id);\n  };\n\n  const handleEdit = (id, val) => {\n    props.editItem(id, val);\n  };\n  return (\n    <div className=\"TodoList\">\n      {props.items.length > 0 &&\n        props.items.map(item => {\n          return (\n            <Todo\n              item={item}\n              markItemComplete={handleComplete}\n              deleteItem={handleDelete}\n              editItem={handleEdit}\n              key={item.id}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport \"../Styles/TodoForm.css\";\nimport uuid from \"uuid/v4\";\nimport useInputState from \"../Hooks/useInputState\";\n\nconst TodoForm = props => {\n  const [inputVal, handleValChange, reset] = useInputState(\"\");\n  const handleClick = () => {\n    let item = { description: inputVal, id: uuid(), completed: false };\n    props.addItem(item);\n    reset();\n  };\n  return (\n    <div className=\"TodoForm\">\n      <h5 className=\"TodoForm-heading\">Add New Item</h5>\n      <textarea\n        className=\"TodoForm-textarea\"\n        value={inputVal}\n        onChange={handleValChange}\n      />\n      <div className=\"TodoForm-buttons\">\n        <button className=\"TodoForm-button-textonly\" onClick={props.closeModal}>\n          Cancel\n        </button>\n        <button className=\"TodoForm-button\" onClick={handleClick}>\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport \"../Styles/TodoApp.css\";\n\nconst TodoApp = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [items, setItems] = useState([]);\n  const handleClick = () => {\n    setModalOpen(!modalOpen);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  const addItem = item => {\n    setItems(prevItems => {\n      return [...prevItems, item];\n    });\n    setModalOpen(false);\n  };\n  const deleteItem = id => {\n    setItems(items.filter(i => i.id !== id));\n  };\n  const editItem = (id, val) => {\n    let updatedItems = items.map(item => {\n      return item.id === id ? { ...item, description: val } : item;\n    });\n    setItems(updatedItems);\n  };\n  const markItemComplete = id => {\n    let updatedItems = items.map(item => {\n      if (item.id === id) {\n        item.completed = !item.completed;\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  };\n  return (\n    <div className=\"TodoApp\">\n      <div className=\"TodoApp-heading\">\n        <h2 className=\"TodoApp-title\">Things to do</h2>\n        <i className=\"fas fa-plus TodoApp-icon\" onClick={handleClick}></i>\n      </div>\n      <TodoList\n        items={items}\n        markItemComplete={markItemComplete}\n        deleteItem={deleteItem}\n        editItem={editItem}\n      />\n      {modalOpen && <TodoForm closeModal={closeModal} addItem={addItem} />}\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./Components/TodoApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}