{"version":3,"sources":["Components/Todo.js","Components/TodoList.js","Components/TodoForm.js","Hooks/useInputState.js","Components/TodoApp.js","App.js","index.js"],"names":["Todo","props","complete","BlueCheckbox","withStyles","root","color","checked","Checkbox","item","completed","className","onClick","markItemComplete","id","description","deleteItem","TodoList","handleDelete","handleComplete","items","length","map","key","TodoForm","initialVal","useState","value","setValue","e","target","useInputState","inputVal","handleValChange","reset","onChange","closeModal","uuid","addItem","TodoApp","modalOpen","setModalOpen","setItems","updatedItems","filter","i","prevItems","App","ReactDOM","render","document","getElementById"],"mappings":"sYAoCeA,EA/BF,SAAAC,GACX,IASIC,EATEC,EAAeC,YAAW,CAC9BC,KAAM,CACJC,MAAO,yBACP,YAAa,CACXA,MAAO,4BAGXC,QAAS,IAPUH,EAQlB,SAAAH,GAAK,OAAI,kBAACO,EAAA,EAAD,eAAUF,MAAM,WAAcL,OAG1C,OADwBC,EAAxBD,EAAMQ,KAAKC,UAAwB,WAA0B,GAE3D,yBAAKC,UAAU,QACb,oCACE,kBAACR,EAAD,CACEI,QAASN,EAAMQ,KAAKC,UACpBE,QAAS,kBAAMX,EAAMY,iBAAiBZ,EAAMQ,KAAKK,OAEnD,uBAAGH,UAAS,2BAAsBT,IAC/BD,EAAMQ,KAAKM,cAGhB,uBACEJ,UAAU,yBACVC,QAAS,kBAAMX,EAAMe,WAAWf,EAAMQ,KAAKK,SCFpCG,G,MAxBE,SAAAhB,GACf,IAAMiB,EAAe,SAAAJ,GACnBb,EAAMe,WAAWF,IAEbK,EAAiB,SAAAL,GACrBb,EAAMY,iBAAiBC,IAEzB,OACE,yBAAKH,UAAU,YACZV,EAAMmB,MAAMC,OAAS,GACpBpB,EAAMmB,MAAME,KAAI,SAAAb,GACd,OACE,kBAAC,EAAD,CACEA,KAAMA,EACNI,iBAAkBM,EAClBH,WAAYE,EACZK,IAAKd,EAAKK,W,yBCYTU,EA3BE,SAAAvB,GAAU,IAAD,ECHX,SAAAwB,GAAe,IAAD,EACDC,mBAASD,GADR,mBACpBE,EADoB,KACbC,EADa,KAQ3B,MAAO,CAACD,EANa,SAAAE,GACnBD,EAASC,EAAEC,OAAOH,QAEN,WACZC,EAAS,MDFgCG,CAAc,IADjC,mBACjBC,EADiB,KACPC,EADO,KACUC,EADV,KAOxB,OACE,yBAAKvB,UAAU,YACb,wBAAIA,UAAU,oBAAd,gBACA,8BACEA,UAAU,oBACVgB,MAAOK,EACPG,SAAUF,IAEZ,yBAAKtB,UAAU,oBACb,4BAAQA,UAAU,2BAA2BC,QAASX,EAAMmC,YAA5D,UAGA,4BAAQzB,UAAU,kBAAkBC,QAjBtB,WAClB,IAAIH,EAAO,CAAEM,YAAaiB,EAAUlB,GAAIuB,MAAQ3B,WAAW,GAC3DT,EAAMqC,QAAQ7B,GACdyB,MAcI,eEwBOK,G,MA3CC,WAAO,IAAD,EACcb,oBAAS,GADvB,mBACbc,EADa,KACFC,EADE,OAEMf,mBAAS,IAFf,mBAEbN,EAFa,KAENsB,EAFM,KA2BpB,OACE,yBAAK/B,UAAU,WACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,iBAAd,gBACA,uBAAGA,UAAU,2BAA2BC,QA5B1B,WAClB6B,GAAcD,OA6BZ,kBAAC,EAAD,CACEpB,MAAOA,EACPP,iBAjBmB,SAAAC,GACvB,IAAI6B,EAAevB,EAAME,KAAI,SAAAb,GAI3B,OAHIA,EAAKK,KAAOA,IACdL,EAAKC,WAAY,GAEZD,KAETiC,EAASC,IAWL3B,WArBa,SAAAF,GACjB4B,EAAStB,EAAMwB,QAAO,SAAAC,GAAC,OAAIA,EAAE/B,KAAOA,SAsBjC0B,GAAa,kBAAC,EAAD,CAAUJ,WAhCT,WACjBK,GAAa,IA+BqCH,QA7BpC,SAAA7B,GACdiC,GAAS,SAAAI,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBrC,OAExBgC,GAAa,SCNFM,MARf,WACE,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,QCFNqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c5775769.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Styles/Todo.css\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst Todo = props => {\n  const BlueCheckbox = withStyles({\n    root: {\n      color: \"rgba(54, 92, 123, 0.8)\",\n      \"&$checked\": {\n        color: \"rgba(54, 92, 123, 0.95)\"\n      }\n    },\n    checked: {}\n  })(props => <Checkbox color=\"default\" {...props} />);\n  let complete;\n  props.item.completed ? (complete = \"complete\") : (complete = \"\");\n  return (\n    <div className=\"Todo\">\n      <>\n        <BlueCheckbox\n          checked={props.item.completed}\n          onClick={() => props.markItemComplete(props.item.id)}\n        />\n        <p className={`Todo-description ${complete}`}>\n          {props.item.description}\n        </p>\n      </>\n      <i\n        className=\"fas fa-times Todo-icon\"\n        onClick={() => props.deleteItem(props.item.id)}\n      ></i>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport \"../Styles/TodoList.css\";\n\nconst TodoList = props => {\n  const handleDelete = id => {\n    props.deleteItem(id);\n  };\n  const handleComplete = id => {\n    props.markItemComplete(id);\n  };\n  return (\n    <div className=\"TodoList\">\n      {props.items.length > 0 &&\n        props.items.map(item => {\n          return (\n            <Todo\n              item={item}\n              markItemComplete={handleComplete}\n              deleteItem={handleDelete}\n              key={item.id}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport \"../Styles/TodoForm.css\";\nimport uuid from \"uuid/v4\";\nimport useInputState from \"../Hooks/useInputState\";\n\nconst TodoForm = props => {\n  const [inputVal, handleValChange, reset] = useInputState(\"\");\n  const handleClick = () => {\n    let item = { description: inputVal, id: uuid(), completed: false };\n    props.addItem(item);\n    reset();\n  };\n  return (\n    <div className=\"TodoForm\">\n      <h5 className=\"TodoForm-heading\">Add New Item</h5>\n      <textarea\n        className=\"TodoForm-textarea\"\n        value={inputVal}\n        onChange={handleValChange}\n      />\n      <div className=\"TodoForm-buttons\">\n        <button className=\"TodoForm-button-textonly\" onClick={props.closeModal}>\n          Cancel\n        </button>\n        <button className=\"TodoForm-button\" onClick={handleClick}>\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React, { useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport \"../Styles/TodoApp.css\";\n\nconst TodoApp = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [items, setItems] = useState([]);\n  const handleClick = () => {\n    setModalOpen(!modalOpen);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  const addItem = item => {\n    setItems(prevItems => {\n      return [...prevItems, item];\n    });\n    setModalOpen(false);\n  };\n  const deleteItem = id => {\n    setItems(items.filter(i => i.id !== id));\n  };\n  const markItemComplete = id => {\n    let updatedItems = items.map(item => {\n      if (item.id === id) {\n        item.completed = true;\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  };\n  return (\n    <div className=\"TodoApp\">\n      <div className=\"TodoApp-heading\">\n        <h2 className=\"TodoApp-title\">Things to do</h2>\n        <i className=\"fas fa-plus TodoApp-icon\" onClick={handleClick}></i>\n      </div>\n      <TodoList\n        items={items}\n        markItemComplete={markItemComplete}\n        deleteItem={deleteItem}\n      />\n      {modalOpen && <TodoForm closeModal={closeModal} addItem={addItem} />}\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./Components/TodoApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}